name: bfclang CI test
on: [push]
jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Act dependencies
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y clang-format
      - run: find lib/ include/ tools/ -iname *.hh -o -iname *.cc | xargs clang-format -n -Werror --style=file

  linux:
    runs-on: ubuntu-latest
    needs: clang-format
    steps:
      - name: install packages
        run: |
          sudo apt-get update && sudo apt-get install -y libllvm18 llvm-18-dev mlir-18-tools libmlir-18 libmlir-18-dev clang-18 libclang-18-dev libclang-cpp18 cmake ninja-build
          pip3 install lit
      - run: ls /usr/lib/llvm-18/lib/cmake/ -l
      - uses: actions/checkout@v4
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DLLVM_DIR=/usr/lib/llvm-18/lib/cmake/llvm/ -DLLVM_EXTERNAL_LIT=`which lit` -GNinja
      - name: build and test
        run: |
          cd build
          ninja check-bf

  macos:
    runs-on: macos-latest
    needs: clang-format
    steps:
      - name: install packages
        run: |
          brew install llvm@18 ninja
          pip3 install --break-system-packages lit
      - run: |
          ls /opt/homebrew/opt/llvm@18/lib
      - uses: actions/checkout@v4
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DLLVM_DIR=/opt/homebrew/opt/llvm@18/lib/cmake/llvm/ -DLLVM_EXTERNAL_LIT=`which lit` -GNinja \
            -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm@18/bin/clang++ -DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm@18/bin/clang
      - name: build and test
        run: |
          cd build
          ninja check-bf
